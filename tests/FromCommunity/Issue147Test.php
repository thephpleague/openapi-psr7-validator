<?php

declare(strict_types=1);

namespace League\OpenAPIValidation\Tests\FromCommunity;

use GuzzleHttp\Psr7\Message;
use GuzzleHttp\Psr7\ServerRequest;
use League\OpenAPIValidation\PSR7\ValidatorBuilder;
use League\OpenAPIValidation\Tests\PSR7\BaseValidatorTest;

/**
 * @see https://github.com/thephpleague/openapi-psr7-validator/issues/147
 */
final class Issue147Test extends BaseValidatorTest
{
    /** @var string */
    private $openApiSpecification;

    public function testIssue147WithServerRequest(): void
    {
        $validator = (new ValidatorBuilder())->fromJson($this->openApiSpecification)->getServerRequestValidator();

        $data = [
            'arrayOfNumbers' => ['1.2', '0', '2.2'],
            'arrayOfIntegers' => ['1', '3'],
            'arrayOfBooleans' => ['false', 'true'],
        ];

        $psrRequest = (new ServerRequest('post', 'http://localhost:8000/api/list'))
            ->withHeader('Content-Type', 'multipart/form-data')
            ->withParsedBody($data);

        $validator->validate($psrRequest);

        $this->addToAssertionCount(1);
    }

    public function testIssue147WithRawBody(): void
    {
        $validator = (new ValidatorBuilder())->fromJson($this->openApiSpecification)->getServerRequestValidator();

        $body = <<<HTTP
POST /api/list HTTP/1.1
Content-Length: 554
Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryOmz20xyMCkE27rN7

------WebKitFormBoundaryOmz20xyMCkE27rN7
Content-Disposition: form-data; name="arrayOfNumbers[]"
Content-Type: text/plain

123.0
------WebKitFormBoundaryOmz20xyMCkE27rN7
Content-Disposition: form-data; name="arrayOfNumbers[]"
Content-Type: text/plain

14
------WebKitFormBoundaryOmz20xyMCkE27rN7
Content-Disposition: form-data; name="arrayOfBooleans[]"
Content-Type: text/plain

true
------WebKitFormBoundaryOmz20xyMCkE27rN7
Content-Disposition: form-data; name="arrayOfIntegers[]"
Content-Type: text/plain

456
------WebKitFormBoundaryOmz20xyMCkE27rN7--
HTTP;

        $message    = Message::parseRequest($body);
        $psrRequest = new ServerRequest(
            $message->getMethod(),
            $message->getUri(),
            $message->getHeaders(),
            $message->getBody()
        );

        $validator->validate($psrRequest);

        $this->addToAssertionCount(1);
    }

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->openApiSpecification = /** @lang json */
        <<<JSON
{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://localhost"
        }
    ],
    "paths": {
        "/api/list": {
            "post": {
                "requestBody": {
                "content": {
                "multipart/form-data": {
                    "schema": {
                    "type": "object",
                    "properties": {
                        "arrayOfNumbers": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        },
                        "arrayOfIntegers": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "arrayOfBooleans": {
                            "type": "array",
                            "items": {
                                "type": "boolean"
                            }
                        }
                    },
                    "required": ["arrayOfNumbers", "arrayOfIntegers", "arrayOfBooleans"] 
                    }
                }
                }
            },
            "responses": {}
            }
        }
    }
}
JSON;
    }
}
